/*
* Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies). 
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description: 
*
*/

NAME ATCO

#include <avkon.rsg>
#include <avkon.rh>
#include <avkon.hrh>
#include <eikon.rh>
#include <appinfo.rh>
#include <avkonicons.hrh>
#include <data_caging_paths_strings.hrh>
#include "atconfigurationappgui.hrh"
#include "atconfigurationappgui.loc.hrh"

RESOURCE RSS_SIGNATURE
	{
	}
RESOURCE TBUF
	{
	buf = "AnalyzeTool";
	}
RESOURCE EIK_APP_INFO r_application_atconfiguration_app_gui_app_ui
	{
	cba = R_AVKON_SOFTKEYS_OPTIONS_EXIT;
	status_pane = r_application_status_pane;
	}
RESOURCE STATUS_PANE_APP_MODEL r_application_status_pane
	{
	}
RESOURCE LOCALISABLE_APP_INFO r_localisable_app_info
	{
	short_caption = "AnalyzeTool";
	caption_and_icon = CAPTION_AND_ICON_INFO
		{
		caption = "AnalyzeTool";

        	number_of_icons = 1;

		// Note for ROM-based apps it is recommended to add the drive letter
		//icon_file = ""z:"APP_BITMAP_DIR"\\atconfigurationappgui_aif.mif";
        	icon_file = APP_BITMAP_DIR"\\atconfigurationappgui_aif.mif";
		};
	}
RESOURCE TBUF r_application_akn_view_reference1
	{
	}
RESOURCE DIALOG r_about_heading_pane
    {
    flags=EEikDialogFlagNoDrag |EEikDialogFlagCbaButtons |EEikDialogFlagWait;
    buttons = R_AVKON_SOFTKEYS_OK_EMPTY; //R_AVKON_SOFTKEYS_BACK;
    items =
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknMessageQueryHeaderId;
            control = AVKON_HEADING
                {
                headinglayout = R_AVKON_LIST_HEADING_PANE_POPUPS;
                label = STR_ATConfigurationAppGuiApplication_About_Dlg_Label;
                };
            },
        DLG_LINE
            {
            type = EAknCtMessageQuery;
            id = EAknMessageQueryContentId;
            control = AVKON_MESSAGE_QUERY
                {
                message = STR_ATConfigurationAppGuiApplication_About_Dlg_Message;
                };
            }
        };
    }

RESOURCE TBUF r_cant_connect_server
    {
    buf = STR_ATConfigurationAppGuiApplication_Error_1;
    }

RESOURCE TBUF r_cant_start_subtest_notsupported
    {
    buf = STR_ATConfigurationAppGuiApplication_Error_2;
    }

RESOURCE TBUF r_cant_start_subtest_processid
    {
    buf = STR_ATConfigurationAppGuiApplication_Error_3;
    }

RESOURCE TBUF r_cant_stop_subtest_processid
    {
    buf = STR_ATConfigurationAppGuiApplication_Error_4;
    }

RESOURCE CBA r_atconfiguration_app_gui_softkeys_options_exit__contextmenu
  {
  flags = 0;
  buttons =
    {
    CBA_BUTTON {id=EAknSoftkeyOptions; txt=STR_ATConfigurationAppGuiSofkteyOptions;},
    CBA_BUTTON {id=EAknSoftkeyExit; txt=STR_ATConfigurationAppGuiSofkteyExit;},
    CBA_BUTTON {id=EAknSoftkeyContextOptions; txt=text_softkey_option;}
    };
  }

RESOURCE CBA r_atconfiguration_app_gui_softkeys_options_back__contextmenu
  {
  flags = 0;
  buttons =
    {
    CBA_BUTTON {id=EAknSoftkeyOptions; txt=STR_ATConfigurationAppGuiSofkteyOptions;},
    CBA_BUTTON {id=EAknSoftkeyBack; txt=STR_ATConfigurationAppGuiSofkteyBack;},
    CBA_BUTTON {id=EAknSoftkeyContextOptions; txt=text_softkey_option;}
    };
  }

#include "atconfigurationappguilistbox.rssi"
#include "atconfigurationappguiprocesscontainer.rssi"
#include "atconfigurationappguisettingitemlist.rssi"
